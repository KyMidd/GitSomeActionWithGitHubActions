# This job takes an input in the GitHub UI and passes it to a job
# The first job reads it and writes it to an environment files. This makes the value accessible to downstream jobs
# The downstream job reads the value, and if it's blank, exits with an error
# The next job only runs if there's no error
# The last job uses the value as the title of the step, which can be a great way to quickly surface information in the UI

name: Passing variable between Steps

on:
  workflow_dispatch:
    inputs:
      target-environment:
        description: The name of the environment to run
        type: string
        default: "develop"

jobs:
  pass-var:
    runs-on: ubuntu-latest
    steps:
    - name: Set deploy location
      id: set-var
      run: |
        ENVIRONMENT=${{ inputs.target-environment }}  
        echo "The ENVIRONMENT var is: $ENVIRONMENT"
        echo "ENVIRONMENT=$ENVIRONMENT" >> $GITHUB_ENV
    
    - name: Read deploy location
      id: read-var
      run: |
        if [ -z "$ENVIRONMENT" ]; then
          echo "No ENVIRONMENT var set, exiting"
          exit 1
        else
          echo "The ENVIRONMENT var is set to: $ENVIRONMENT"
        fi

    - name: The deployed environment is ${{ inputs.target-environment }}
      run: |
        echo "The titles of jobs can be used to quickly surface information in the UI"