# This Action reads an input string and passes it to the first job
# The first step reads the value, then masks it and writes it to the environment file
# The second step reads the masked variable, and attempts to print it, which fails
# Then we use a work-around to print the value with extra spaces, defeating the github native masking

name: Passing variable with masking

on:
  workflow_dispatch:
    inputs:
      solution_name:
        description: The solution to execute, e.g., AAA, BBB, CCC
        type: string
        default: "AAA"

jobs:
  pass-masked-var:
    runs-on: ubuntu-latest
    steps:
    - name: Mask solution name
      id: set-var
      run: |
        solution_name=${{ inputs.solution_name }}  
        echo "::add-mask::$solution_name"
        echo "solution_name=$solution_name" >> $GITHUB_ENV

    - name: Read solution name
      id: read-var
      run: |
        echo "Directly printing the value doesn't work"
        echo "$solution_name"

        echo "However, it's not perfect"
        echo "Your masked variable is: $solution_name" | sed 's/./& /g'